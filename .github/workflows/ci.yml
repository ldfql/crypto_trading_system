name: CI

on:
  push:
    branches:
      - "devin/*"
  pull_request:
    branches:
      - "main"
      - "devin/*"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crypto_trading_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Python dependencies
        working-directory: ./trading_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Verify database connection
        working-directory: ./trading_backend
        run: python scripts/verify_env.py
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crypto_trading_test

      - name: Run migrations
        working-directory: ./trading_backend
        run: alembic upgrade head
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crypto_trading_test

      - name: Run backend tests
        working-directory: ./trading_backend
        run: pytest tests/ --cov=app --cov-report=xml
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crypto_trading_test

      - name: Install frontend dependencies
        working-directory: ./frontend/crypto-trading-pwa
        run: |
          npm install

      - name: Run frontend tests
        working-directory: ./frontend/crypto-trading-pwa
        run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        working-directory: ./trading_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Check formatting with Black
        working-directory: ./trading_backend
        run: black --check .

      - name: Lint with Ruff
        working-directory: ./trading_backend
        run: ruff check .

      - name: Type check with MyPy
        working-directory: ./trading_backend
        run: mypy .

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Build backend
        working-directory: ./trading_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python setup.py build

      - name: Build frontend
        working-directory: ./frontend/crypto-trading-pwa
        run: |
          npm install
          npm run build
